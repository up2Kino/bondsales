<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bondsales.backend.dao.mapper.SalesMapper">
  <resultMap id="BaseResultMap" type="com.bondsales.backend.dao.entity.Sales">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="sellID" jdbcType="BIGINT" property="sellid" />
    <result column="userID" jdbcType="BIGINT" property="userid" />
    <result column="bondID" jdbcType="BIGINT" property="bondid" />
    <result column="price" jdbcType="BIGINT" property="price" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
  </resultMap>

  <resultMap id="SalesInfoMap" type="com.bondsales.backend.common.SalesInfo">
    <id column="sellID" jdbcType="BIGINT" property="sellid" />
    <result column="userID" jdbcType="BIGINT" property="userid" />
    <result column="bondID" jdbcType="BIGINT" property="bondid" />
    <result column="price" jdbcType="BIGINT" property="price" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="startDate" jdbcType="TIMESTAMP" property="date" />
    <result column="endDate" jdbcType="TIMESTAMP" property="date" />
    <result column="bondName" jdbcType="VARCHAR" property="bondname" />
    <result column="userName" jdbcType="VARCHAR" property="username" />
  </resultMap>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from SALES
    where sellID = #{sellid,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.bondsales.backend.dao.entity.Sales">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->

    insert into SALES (sellID, userID, bondID, 
      price, `date`)
    values (#{sellid,jdbcType=BIGINT}, #{userid,jdbcType=BIGINT}, #{bondid,jdbcType=BIGINT}, 
      #{price,jdbcType=BIGINT}, #{date,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.bondsales.backend.dao.entity.Sales">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update SALES
    set userID = #{userid,jdbcType=BIGINT},
      bondID = #{bondid,jdbcType=BIGINT},
      price = #{price,jdbcType=BIGINT},
      `date` = #{date,jdbcType=TIMESTAMP}
    where sellID = #{sellid,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select sellID, userID, bondID, price, `date`
    from SALES
    where sellID = #{sellid,jdbcType=BIGINT}
  </select>

  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select sellID, userID, bondID, price, `date`
    from SALES
  </select>

  <select id="lookUp" parameterType="com.bondsales.backend.common.SalesInfo" resultMap="SalesInfoMap">
    select sellID, s.userID, s.bondID, price, `date`, d.bondname, u.username
    from SALES s left join BOND d on s.bondid = d.bondid left join USER u on s.userid = u.userid
    <where>
          date between #{SalesInfo.startDate,jdbcType=DATE} and #{SalesInfo.endDate,jdbcType=DATE}
    <if test="SalesInfo.bondid != null">
      and s.bondid = #{SalesInfo.bondid,jdbcType=BIGINT}
    </if>
    <if test="SalesInfo.userid != null">
      and s.userid = #{SalesInfo.userid,jdbcType=BIGINT}
    </if>
    </where>
    <if test="SalesInfo.pageNumber == -1">
      limit (#{SalesInfo.pageNumber} - 1) * #{SalesInfo.numPerPage} , #{SalesInfo.pageNumber} * #{SalesInfo.numPerPage}
    </if>

  </select>

  <select id="latestRecords" resultMap="SalesInfoMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select sellID, s.userID, s.bondID, price, `date`, d.bondname, u.username
    from SALES s left join BOND d on s.bondid = d.bondid left join USER u on s.userid = u.userid
    order by sellID desc
    limit 5
  </select>


  <insert id="insertBatch" parameterType="java.util.List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into SALES (sellID, userID, bondID,price, `date`) values
    <foreach collection="list" item="item" separator=",">
      (#{item.sellid,jdbcType=BIGINT}, #{item.userid,jdbcType=BIGINT}, #{item.bondid,jdbcType=BIGINT},
      #{item.price,jdbcType=BIGINT}, #{item.date,jdbcType=TIMESTAMP})
    </foreach>
  </insert>



</mapper>

